{
  "generation": 6,
  "population_size": 10,
  "selected_indices": [
    0,
    1
  ],
  "text_prompt": "",
  "individuals": [
    {
      "index": 0,
      "expression": "_or(cos(sin(log(log(_and(div(tan(z), _and(scalar(0.9424150563925626), scalar(-0.13415681723892736))), scalar(0.8177695198054091)))))), sqrt(max(mdist(_and(z, x), tan(z)), pow(log(scalar(-0.2790728348289615)), _and(_or(scalar(-0.32223242609598457), scalar(-0.9178954910152941)), z)))))",
      "fitness": 1.0085592253141917,
      "depth": 8,
      "nodes": 29,
      "selected": true
    },
    {
      "index": 1,
      "expression": "_or(cos(sin(log(log(_and(div(tan(z), _and(scalar(0.9424150563925626), scalar(-0.13415681723892736))), scalar(0.8177695198054091)))))), sqrt(max(pow(frac(add(scalar(0.8512073501281419), y)), mdist(_and(z, x), tan(z))), pow(log(scalar(-0.2790728348289615)), _and(_or(scalar(-0.32223242609598457), scalar(-0.9178954910152941)), z)))))",
      "fitness": 1.008479647232946,
      "depth": 8,
      "nodes": 34,
      "selected": true
    },
    {
      "index": 2,
      "expression": "pow(z, min(warp(abs(z), x, scalar(-0.23953952094661668), x), sqrt(sin(z))))",
      "fitness": 1.0081757593298377,
      "depth": 4,
      "nodes": 12,
      "selected": false
    },
    {
      "index": 3,
      "expression": "pow(z, min(warp(abs(z), x, scalar(-0.23953952094661668), y), sqrt(sin(z))))",
      "fitness": 1.006462778802031,
      "depth": 4,
      "nodes": 12,
      "selected": false
    },
    {
      "index": 4,
      "expression": "pow(z, min(warp(abs(x), x, scalar(-0.23953952094661668), x), sqrt(sin(z))))",
      "fitness": 1.0010397860977103,
      "depth": 4,
      "nodes": 12,
      "selected": false
    },
    {
      "index": 5,
      "expression": "_or(cos(sin(log(log(_and(div(tan(z), _and(scalar(0.9424150563925626), scalar(-0.13415681723892736))), scalar(0.8177695198054091)))))), sqrt(max(mdist(_and(z, x), tan(z)), pow(log(scalar(-0.2790728348289615)), _and(_or(scalar(-0.32223242609598457), scalar(-0.9178954910152941)), neg(z))))))",
      "fitness": 1.0040918667664664,
      "depth": 8,
      "nodes": 30,
      "selected": false
    },
    {
      "index": 6,
      "expression": "_or(cos(sin(log(log(_and(div(tan(z), _and(scalar(0.9424150563925626), scalar(-0.13415681723892736))), scalar(0.8177695198054091)))))), sqrt(max(pow(xor(add(scalar(0.8512073501281419), y), y), mdist(_and(z, x), tan(z))), pow(log(scalar(-0.2790728348289615)), _and(_or(scalar(-0.32223242609598457), scalar(-0.9178954910152941)), z)))))",
      "fitness": 9.444736036573809e-05,
      "depth": 8,
      "nodes": 35,
      "selected": false
    },
    {
      "index": 7,
      "expression": "_or(cos(sin(log(log(_and(div(tan(z), _and(scalar(0.9424150563925626), scalar(-0.13415681723892736))), scalar(0.3826044833967237)))))), sqrt(max(mdist(_and(z, x), tan(z)), pow(log(scalar(-0.2790728348289615)), _and(_or(scalar(-0.32223242609598457), scalar(-0.9178954910152941)), z)))))",
      "fitness": 0.002646772440427311,
      "depth": 8,
      "nodes": 29,
      "selected": false
    },
    {
      "index": 8,
      "expression": "_or(cos(sin(log(log(_and(div(tan(z), _and(scalar(0.9424150563925626), scalar(-0.13415681723892736))), scalar(0.8177695198054091)))))), sqrt(max(mdist(_and(z, x), tan(z)), pow(log(scalar(-0.2790728348289615)), _and(_or(scalar(-0.32223242609598457), scalar(-0.9178954910152941)), z)))))",
      "fitness": 0.0006711965164006295,
      "depth": 8,
      "nodes": 29,
      "selected": false
    },
    {
      "index": 9,
      "expression": "_or(cos(sin(log(log(_and(div(tan(z), _and(scalar(0.9424150563925626), scalar(-0.13415681723892736))), scalar(0.8177695198054091)))))), sqrt(max(mdist(_and(z, x), tan(z)), pow(log(scalar(-0.2790728348289615)), _and(_or(add(scalar(-0.32223242609598457), scalar(-0.13077546247104)), scalar(-0.9178954910152941)), z)))))",
      "fitness": 0.0032199848023307244,
      "depth": 8,
      "nodes": 31,
      "selected": false
    }
  ]
}